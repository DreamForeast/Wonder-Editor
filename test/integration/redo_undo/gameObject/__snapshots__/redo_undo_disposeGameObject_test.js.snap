// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`redo_undo: dispose gameObject prepare first step: set currentSceneTreeNode test operate disposeGameObject(because the set currentSceneTreeNode operation is redoUndoable, so need execute redo/undo operation twice for dispose one gameObject) test redo operate test redo one step undo step which from second to zero,redo step which from zero to first 1`] = `
<article
  className="wonder-sceneTree-component"
>
  <article
    className="wonder-drag-tree"
  >
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        style={
          Object {
            "border": "1px solid red",
          }
        }
      >
        <div
          className="item-ground"
          draggable={true}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
        />
        camera
      </li>
    </ul>
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        style={
          Object {
            "border": "1px solid red",
          }
        }
      >
        <div
          className="item-ground"
          draggable={true}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
        />
        cube
      </li>
    </ul>
    <div
      className="wonder-disable-drag"
      onDragEnter={[Function]}
      onDragLeave={[Function]}
      onDragOver={[Function]}
      onDrop={[Function]}
      style={
        Object {
          "backgroundColor": "#c0c0c0",
        }
      }
    />
  </article>
</article>
`;

exports[`redo_undo: dispose gameObject prepare first step: set currentSceneTreeNode test operate disposeGameObject(because the set currentSceneTreeNode operation is redoUndoable, so need execute redo/undo operation twice for dispose one gameObject) test redo operate test redo two step undo step which from second to zero,redo step which from zero to second 1`] = `
<article
  className="wonder-sceneTree-component"
>
  <article
    className="wonder-drag-tree"
  >
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        style={
          Object {
            "border": "1px solid red",
          }
        }
      >
        <div
          className="item-ground"
          draggable={true}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
        />
        camera
      </li>
    </ul>
    <div
      className="wonder-disable-drag"
      onDragEnter={[Function]}
      onDragLeave={[Function]}
      onDragOver={[Function]}
      onDrop={[Function]}
      style={
        Object {
          "backgroundColor": "#c0c0c0",
        }
      }
    />
  </article>
</article>
`;

exports[`redo_undo: dispose gameObject prepare first step: set currentSceneTreeNode test operate disposeGameObject(because the set currentSceneTreeNode operation is redoUndoable, so need execute redo/undo operation twice for dispose one gameObject) test undo operate test not undo 1`] = `
<article
  className="wonder-sceneTree-component"
>
  <article
    className="wonder-drag-tree"
  >
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        style={
          Object {
            "border": "1px solid red",
          }
        }
      >
        <div
          className="item-ground"
          draggable={true}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
        />
        camera
      </li>
    </ul>
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        style={
          Object {
            "background": "red",
          }
        }
      >
        <div
          className="item-ground"
          draggable={true}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
        />
        cube
      </li>
    </ul>
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        style={
          Object {
            "border": "1px solid red",
          }
        }
      >
        <div
          className="item-ground"
          draggable={true}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
        />
        cube
      </li>
    </ul>
    <div
      className="wonder-disable-drag"
      onDragEnter={[Function]}
      onDragLeave={[Function]}
      onDragOver={[Function]}
      onDrop={[Function]}
      style={
        Object {
          "backgroundColor": "#c0c0c0",
        }
      }
    />
  </article>
</article>
`;

exports[`redo_undo: dispose gameObject prepare first step: set currentSceneTreeNode test operate disposeGameObject(because the set currentSceneTreeNode operation is redoUndoable, so need execute redo/undo operation twice for dispose one gameObject) test undo operate test undo one step test undo two step step which from second to zero 1`] = `
<article
  className="wonder-sceneTree-component"
>
  <article
    className="wonder-drag-tree"
  >
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        style={
          Object {
            "border": "1px solid red",
          }
        }
      >
        <div
          className="item-ground"
          draggable={true}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
        />
        camera
      </li>
    </ul>
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        style={
          Object {
            "border": "1px solid red",
          }
        }
      >
        <div
          className="item-ground"
          draggable={true}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
        />
        cube
      </li>
    </ul>
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        style={
          Object {
            "border": "1px solid red",
          }
        }
      >
        <div
          className="item-ground"
          draggable={true}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
        />
        cube
      </li>
    </ul>
    <div
      className="wonder-disable-drag"
      onDragEnter={[Function]}
      onDragLeave={[Function]}
      onDragOver={[Function]}
      onDrop={[Function]}
      style={
        Object {
          "backgroundColor": "#c0c0c0",
        }
      }
    />
  </article>
</article>
`;

exports[`redo_undo: dispose gameObject prepare first step: set currentSceneTreeNode test operate disposeGameObject(because the set currentSceneTreeNode operation is redoUndoable, so need execute redo/undo operation twice for dispose one gameObject) test undo operate test undo one step undo step which from second to first 1`] = `
<article
  className="wonder-sceneTree-component"
>
  <article
    className="wonder-drag-tree"
  >
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        style={
          Object {
            "border": "1px solid red",
          }
        }
      >
        <div
          className="item-ground"
          draggable={true}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
        />
        camera
      </li>
    </ul>
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        style={
          Object {
            "border": "1px solid red",
          }
        }
      >
        <div
          className="item-ground"
          draggable={true}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
        />
        cube
      </li>
    </ul>
    <div
      className="wonder-disable-drag"
      onDragEnter={[Function]}
      onDragLeave={[Function]}
      onDragOver={[Function]}
      onDrop={[Function]}
      style={
        Object {
          "backgroundColor": "#c0c0c0",
        }
      }
    />
  </article>
</article>
`;
