// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`redo_undo: transform test simulate set currentSceneTreeNode deal with specific case change transform;
              click undo 1`] = `
<article
  className="wonder-inspector-transform"
>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      X : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="0"
    />
  </article>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      Y : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="0"
    />
  </article>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      Z : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="0"
    />
  </article>
</article>
`;

exports[`redo_undo: transform test simulate set currentSceneTreeNode test redo operate test redo one step if not exec undo, redo one step, not change 1`] = `
<article
  className="wonder-inspector-transform"
>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      X : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="11.25"
    />
  </article>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      Y : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="15"
    />
  </article>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      Z : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="0"
    />
  </article>
</article>
`;

exports[`redo_undo: transform test simulate set currentSceneTreeNode test redo operate test redo one step undo step which from second to zero, redo step which from zero to first 1`] = `
<article
  className="wonder-inspector-transform"
>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      X : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="11.25"
    />
  </article>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      Y : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="0"
    />
  </article>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      Z : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="0"
    />
  </article>
</article>
`;

exports[`redo_undo: transform test simulate set currentSceneTreeNode test redo operate test redo three step test if current step is last step, execute redo, not change 1`] = `
<article
  className="wonder-inspector-transform"
>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      X : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="11.25"
    />
  </article>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      Y : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="15"
    />
  </article>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      Z : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="0"
    />
  </article>
</article>
`;

exports[`redo_undo: transform test simulate set currentSceneTreeNode test redo operate test redo two step undo step which from second to zero, redo step which from zero to second 1`] = `
<article
  className="wonder-inspector-transform"
>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      X : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="11.25"
    />
  </article>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      Y : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="15"
    />
  </article>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      Z : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="0"
    />
  </article>
</article>
`;

exports[`redo_undo: transform test simulate set currentSceneTreeNode test undo operate test not undo 1`] = `
<article
  className="wonder-inspector-transform"
>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      X : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="11.25"
    />
  </article>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      Y : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="15"
    />
  </article>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      Z : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="0"
    />
  </article>
</article>
`;

exports[`redo_undo: transform test simulate set currentSceneTreeNode test undo operate test undo one step step which from second to first 1`] = `
<article
  className="wonder-inspector-transform"
>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      X : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="11.25"
    />
  </article>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      Y : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="0"
    />
  </article>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      Z : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="0"
    />
  </article>
</article>
`;

exports[`redo_undo: transform test simulate set currentSceneTreeNode test undo operate test undo two step step which from second to zero 1`] = `
<article
  className="wonder-inspector-transform"
>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      X : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="0"
    />
  </article>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      Y : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="0"
    />
  </article>
  <article
    className="wonder-float-input"
  >
    <span
      className="component-label"
    >
      Z : 
    </span>
    <input
      className="input-component float-input"
      onBlur={[Function]}
      onChange={[Function]}
      type="text"
      value="0"
    />
  </article>
</article>
`;
